package equipment

import "github.com/gbadali/equipmentMap/view/layout"
import "github.com/gbadali/equipmentMap/db"
import "fmt"

templ EquipmentForm(list []db.Equipment) {
	@layout.Base("Add Equipment") {
		<div class="container">
			<form action="/equipment" method="POST" id="add_equipment">
				<div class="form-group">
					<label for="name">Name</label>
					<input
						class="form-control"
						form="add_equipment"
						id="name"
						name="name"
						placeholder="Name"
						required="required"
						type="text"
					/>
					<label for="parent">Parent</label>
					<select
						id="parent"
						name="parent"
					>
						@EquipmentSelectOptions(list, "")
					</select>
				</div>
				<div>
					<button type="submit">Add Equipment</button>
				</div>
			</form>
		</div>
	}
}

templ EquipmentSelectOptions(equip []db.Equipment, selected string) {
	for _, e := range equip {
		if e.Name == selected {
			<option value={ fmt.Sprint(e.ID) } selected="selected">{ e.Name }</option>
		} else {
			<option value={ fmt.Sprint(e.ID) }>{ e.Name }</option>
		}
	}
}

// EquipmentLayout renders a single piece of equipment
templ EquipmentLayout(equip db.Equipment, parent db.Equipment, bread []db.GetHierarchyRow ) {
	@layout.Base("Equipment") {
		<div class="container">
			@Breadcrumbs(bread)
			@Equipment(equip, parent)
		</div>
	}
}

// Equipment renders a single piece of equipment
templ Equipment(equip db.Equipment, parent db.Equipment) {
	<article hx-target="this" hx-swap="outerHTML">
		<header>Equipment</header>
		<div><label>Name:</label> <input type="text" placeholder={ equip.Name } readonly/></div>
		if equip.Parent.Valid {
			<div>
				<label>Parent:</label>
				<input type="text" placeholder={ parent.Name } readonly/>
			</div>
		}
		<button hx-get={ fmt.Sprint(equip.ID) + "/edit" } class="btn btn-primary">Click To Edit</button>
	</article>
}

// EditEquipment renders a form to edit equipment
templ EditEquipment(equip db.Equipment, parent db.Equipment, list []db.Equipment) {
	<article hx-target="this" hx-swap="outerHTML">
		<header>Edit Equipment</header>
		<form hx-put={ fmt.Sprint(equip.ID) }>
			<div class="form-group">
				<label for="name">Name</label>
				<input
					id="name"
					name="name"
					value={ equip.Name }
				/>
				<label for="parent">Parent</label>
				<select
					id="parent"
					name="parent"
				>
					@EquipmentSelectOptions(list, parent.Name)
				</select>
			</div>
			<div>
				<button class="btn" type="submit">Edit Equipment</button>
				<button class="btn" hx-get={ fmt.Sprint(equip.ID) }>Cancel</button>
			</div>
		</form>
	</article>
}

// Breadcrumbs renders a breadcrumb trail
templ Breadcrumbs(bread []db.GetHierarchyRow) {
	<nav aria-label="breadcrumb">
		<ul>
			for _,b := range bread {
				<li><a href={ templ.SafeURL(fmt.Sprint(b.ID)) }>{ b.Name }</a></li>
			}
		</ul>
	</nav>
}
